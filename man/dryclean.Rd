% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dryclean.R
\name{dryclean}
\alias{dryclean}
\title{dryclean}
\description{
dryclean R6 class storing all methods and values necessary for "drycleaning"
}
\details{
Add more details
}
\author{
Aditya Deshpande <asd3002@med.cornell.edu>, Sebastian Brylka <sebastian.brylka@nyulangone.org>
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-dryclean-new}{\code{dryclean$new()}}
\item \href{#method-dryclean-prepare_detergent}{\code{dryclean$prepare_detergent()}}
\item \href{#method-dryclean-start_wash_cycle}{\code{dryclean$start_wash_cycle()}}
\item \href{#method-dryclean-cbs}{\code{dryclean$cbs()}}
\item \href{#method-dryclean-get_drycleaned_cov}{\code{dryclean$get_drycleaned_cov()}}
\item \href{#method-dryclean-get_cbs_drycleaned_cov}{\code{dryclean$get_cbs_drycleaned_cov()}}
\item \href{#method-dryclean-get_normal_table_path}{\code{dryclean$get_normal_table_path()}}
\item \href{#method-dryclean-get_normal_table}{\code{dryclean$get_normal_table()}}
\item \href{#method-dryclean-get_pon_path}{\code{dryclean$get_pon_path()}}
\item \href{#method-dryclean-get_pon}{\code{dryclean$get_pon()}}
\item \href{#method-dryclean-get_cov_path}{\code{dryclean$get_cov_path()}}
\item \href{#method-dryclean-get_history}{\code{dryclean$get_history()}}
\item \href{#method-dryclean-check_status}{\code{dryclean$check_status()}}
\item \href{#method-dryclean-save_drycleaned_cov}{\code{dryclean$save_drycleaned_cov()}}
\item \href{#method-dryclean-save_cbs_drycleaned_cov}{\code{dryclean$save_cbs_drycleaned_cov()}}
\item \href{#method-dryclean-clone}{\code{dryclean$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-new"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-new}{}}}
\subsection{Method \code{new()}}{
Initialized dryclean object with given paths to normal table, PON and cov
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$new(normal_table_path = NA, pon_path = NA, cov_path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{normal_table_path}}{Character path to data.table containing two columns "sample" and "normal_cov". See manual for details}

\item{\code{pon_path}}{Character path to PON/detergent}

\item{\code{cov_path}}{Character path to GRanges object containig the GC corrected cov data outputed from fragCounter. Needs metadata with header "reads.corrected"}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Can either point to the existing PON or point to the directory where the user wants to save the PON generated by \code{prepare_detergent(save.pon = TRUE)} method
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-prepare_detergent"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-prepare_detergent}{}}}
\subsection{Method \code{prepare_detergent()}}{
This is the frist stage and involves preparing the Panel of Normals (PON)
that will be used for online decomposition. Author: Aditya Deshpande
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$prepare_detergent(
  use.all = TRUE,
  choose.randomly = FALSE,
  choose.by.clustering = FALSE,
  number.of.samples = 50,
  save.pon = FALSE,
  verbose = TRUE,
  num.cores = 1,
  tolerance = 1e-04,
  is.human = TRUE,
  build = "hg19",
  field = "reads.corrected",
  PAR.file = NULL,
  balance = TRUE,
  infer.germline = TRUE,
  signal.thresh = 0.3,
  pct.thresh = 0.8,
  wgs = TRUE,
  target_resolution = 1000,
  nochr = TRUE,
  all.chr = c(as.character(1:22), "X")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{use.all}}{boolean (default == TRUE). If all normal samples are to be used for creating PON.}

\item{\code{choose.randomly}}{boolean (default == FALSE). If a random subset of normal samples are to be used for creating PON.}

\item{\code{choose.by.clustering}}{boolean (default == FALSE). Clusters normal samples based on the genomic background and takes a random sample from within the clusters.}

\item{\code{number.of.samples}}{interger (default == 50). If choose.by.clustering == TRUE, this is the number of clusters at which to cut tree.}

\item{\code{save.pon}}{boolean (default == FALSE). If PON needs to be saved.}

\item{\code{verbose}}{boolean (default == TRUE). Outputs progress.}

\item{\code{num.cores}}{interger (default == 1). Number of cores to use for parallelization.}

\item{\code{tolerance}}{numeric (default == 0.0001). Tolerance for error for batch rPCA. We suggest keeping this value.}

\item{\code{is.human}}{boolean (default == TRUE). Organism type.}

\item{\code{build}}{genome build to define PAR region in chromosome X.}

\item{\code{field}}{character (default == "reads.corrected"). Field to use for processing.}

\item{\code{PAR.file}}{this is a GRanges with the boundaries of PAR region in X chr.}

\item{\code{balance}}{Boolean (default == TRUE) experimental variable to take into consideration 1 copy of X chr in male sample}

\item{\code{infer.germline}}{use the L matrix to infer germline events.}

\item{\code{signal.thresh}}{numeric (default == 0.5). This is the threshold to be used to identify an amplification (markers with signal intensity > 0.5) or deletions (markers with signal intensity < -0.5) in log space from dryclean outputs.}

\item{\code{pct.thresh}}{numeric (default == 0.98). Proportion of samples in which a given marker is free of germline event.}

\item{\code{wgs}}{boolean for whether whole genome is being used}

\item{\code{target_resolution}}{numeric (default == 1e3) resolution at which to conduct analyses}

\item{\code{nochr}}{logical (default = TRUE) remove chr prefix}

\item{\code{all.chr}}{list(default = c(as.character(1:22), "X")) list of chromosomes}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This function takes in gRanges outputs from fragCounter and extracts GC corrected
read count data and carries rPCA decomposition on the matrix thus created. The normal samples used to form the PON can be selected randomly or by clustering the genomic background or all samples can be used.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-start_wash_cycle"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-start_wash_cycle}{}}}
\subsection{Method \code{start_wash_cycle()}}{
Function begins the online rPCA process. Use this function if you performed batch rPCA on samples as whole without dividing into chromosomes. For exomes and whole genomes where number of normal samples are small (<=100). Author: Aditya Deshpande
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$start_wash_cycle(
  centered = TRUE,
  mc.cores = 1,
  verbose = TRUE,
  whole_genome = TRUE,
  use.blacklist = FALSE,
  chr = NA,
  germline.filter = FALSE,
  germline.file = NA,
  field = "reads.corrected",
  is.human = TRUE,
  all.chr = c(as.character(1:22), "X")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{centered}}{boolean (default == TRUE). If a coverage has alreade been centered by by dividing each bin by global mean signal of the sample}

\item{\code{mc.cores}}{interger (default == 1). Number of cores to use for parallelization.}

\item{\code{verbose}}{boolean (default == TRUE). Outputs progress.}

\item{\code{whole_genome}}{boolean (default = TRUE). For this function always set this parameter to TRUE.}

\item{\code{use.blacklist}}{boolean (default = FALSE). Whether to exclude off-target markers in case of Exomes or targeted sequencing. If set to TRUE, needs a GRange marking if each marker is set to be excluded or not.}

\item{\code{chr}}{integer (default == NA). Depracated. Can be used to decompose a single chromosome.}

\item{\code{germline.filter}}{boolean (default == FALSE). If germline markers need to be removed from decomposition.}

\item{\code{germline.file}}{character (default == NA). Path to file with germline markers.}

\item{\code{field}}{character (default == "reads.corrected"). Field to use for processing.}

\item{\code{is.human}}{boolean (default == TRUE). Organism type.}

\item{\code{all.chr}}{list(default = c(as.character(1:22), "X")) list of chromosomes}

\item{\code{detergent.pon.path}}{string. Path to pon/detergent genrated using normal samples.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The function begins the online rPCA process. It is the wrapper that takes in GRanges and outputs GRanges with decomposition
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-cbs"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-cbs}{}}}
\subsection{Method \code{cbs()}}{
Function apples CBS correction to the 'drycleaned' GRanges object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$cbs()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Nothing to return
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-get_drycleaned_cov"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-get_drycleaned_cov}{}}}
\subsection{Method \code{get_drycleaned_cov()}}{
Function returns the 'drycleaned' GRanges object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$get_drycleaned_cov()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The 'drycleaned' GRanges object from cov input
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-get_cbs_drycleaned_cov"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-get_cbs_drycleaned_cov}{}}}
\subsection{Method \code{get_cbs_drycleaned_cov()}}{
Function returns the CBS corrected 'drycleaned' GRanges object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$get_cbs_drycleaned_cov()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The CBS corrected 'drycleaned' GRanges object from cov input
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-get_normal_table_path"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-get_normal_table_path}{}}}
\subsection{Method \code{get_normal_table_path()}}{
Function returns the path to the normal table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$get_normal_table_path()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Path to the normal table
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-get_normal_table"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-get_normal_table}{}}}
\subsection{Method \code{get_normal_table()}}{
Function returns the normal table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$get_normal_table()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Normal table
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-get_pon_path"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-get_pon_path}{}}}
\subsection{Method \code{get_pon_path()}}{
Function returns the path to the PON
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$get_pon_path()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Path to the PON
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-get_pon"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-get_pon}{}}}
\subsection{Method \code{get_pon()}}{
Function returns the PON
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$get_pon()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PON
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-get_cov_path"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-get_cov_path}{}}}
\subsection{Method \code{get_cov_path()}}{
Function returns the path to the coverage file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$get_cov_path()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Path to the coverage file
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-get_history"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-get_history}{}}}
\subsection{Method \code{get_history()}}{
Function returns the history of the dryclean object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$get_history()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Prints the history of the dryclean object as data table
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-check_status"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-check_status}{}}}
\subsection{Method \code{check_status()}}{
Function returns the current status of the object and recommends next steps
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$check_status()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Prints the current status and recommends next actions
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-save_drycleaned_cov"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-save_drycleaned_cov}{}}}
\subsection{Method \code{save_drycleaned_cov()}}{
Function saves the drycleaned coverage as rds to the given path
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$save_drycleaned_cov(path = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{character(default = NA) path to save rds of the coverage file}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Information about save status
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-save_cbs_drycleaned_cov"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-save_cbs_drycleaned_cov}{}}}
\subsection{Method \code{save_cbs_drycleaned_cov()}}{
Function saves the CBS corrected drycleaned coverage as rds to the given path
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$save_cbs_drycleaned_cov(path = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{character(default = NA) path to save rds of the cbs coverage file}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Information about save status
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dryclean-clone"></a>}}
\if{latex}{\out{\hypertarget{method-dryclean-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{dryclean$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
